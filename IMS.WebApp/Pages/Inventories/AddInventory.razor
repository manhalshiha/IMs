@page "/addinventory"
@attribute [Authorize]
@inject IAddInventoryUseCase addInventoryUseCase
@inject NavigationManager navigationManager
<h3>Add Inventory</h3>

@if(inventory!=null)
{
    <EditForm Model="inventory" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <div class="form-group">
            <label for="name">Inventory Name :</label>
            <InputText id="name" class="form-control" @bind-Value="inventory.InventoryName"></InputText>
        </div>
        <div class="form-group">
            <label for="quantity">Quantity</label>
            <InputNumber id="quantity" class="form-control" @bind-Value="inventory.Quantity"></InputNumber>
        </div>
        <div class="form-group">
            <label for="price">Price</label>
            <InputNumber id="price" class="form-control" @bind-Value="inventory.Price"></InputNumber>
        </div>
        <button type="submit" class="btn btn-primary mt-3">Save</button>
        <button type="button" class="btn btn-primary mt-3" @onclick="Cancel">cancel</button>
    </EditForm>
}
@code {

    public Inventory inventory = new Inventory();

    private async Task OnValidSubmit()
    {
        if (this.inventory != null)
        {
            await this.addInventoryUseCase.ExecuteAsync(this.inventory);
            navigationManager.NavigateTo("/inventories");
        }
    }
    private void Cancel()
    {
            navigationManager.NavigateTo("/inventories");        
    }
}

