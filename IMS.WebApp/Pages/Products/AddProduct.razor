@page "/addproduct"
@attribute [Authorize]
@inject IAddProductUseCase addProductUseCase
@inject NavigationManager navigationManager
<h3>Add Product</h3>

@if (product != null)
{
    <EditForm Model="product" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <div class="form-group">
            <label for="name">Product Name :</label>
            <InputText id="name" class="form-control" @bind-Value="product.ProductName"></InputText>
        </div>
        <div class="form-group">
            <label for="quantity">Quantity</label>
            <InputNumber id="quantity" class="form-control" @bind-Value="product.Quantity" ></InputNumber>
        </div>
        <div class="form-group">
            <label for="price">Price</label>
            <InputNumber id="price" class="form-control" @bind-Value="product.Price"></InputNumber>
        </div>
        <ProductInventoriesComponent @ref="ProductInventoriesComponent" OnInventorySelected="OnInventorySelected"></ProductInventoriesComponent>
        <button type="submit" class="btn btn-primary mt-3">Save</button>
        <button type="button" class="btn btn-primary mt-3" @onclick="Cancel">cancel</button>
    </EditForm>
}
@code {

    public Product product = new Product();
    private ProductInventoriesComponent ProductInventoriesComponent;
    private async Task OnValidSubmit()
    {
        if (this.product != null)
        {
            this.ProductInventoriesComponent.ProductInventories.ForEach(x =>
            {
                x.ProductId = this.product.ProductId;
            });
            this.product.ProductInventories = ProductInventoriesComponent.ProductInventories;
            await this.addProductUseCase.ExecuteAsync(this.product);
            navigationManager.NavigateTo("/products");
        }
    }
    public void OnInventorySelected(List<ProductInventory> productInventories)
    {
        this.product.ProductInventories = productInventories;
    }
    private void Cancel()
    {
        navigationManager.NavigateTo("/products");

    }
    

}

