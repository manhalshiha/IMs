@page "/editproduct/{prodid:int}"
@attribute [Authorize]
@inject NavigationManager navigationManager
@inject IEditProductUseCase editProductUseCase
@inject IViewProductByIdUseCase viewProductByIdUseCase
<h3>Edit Product</h3>
@if(product!=null)
{
    <EditForm Model="product" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <div class="form-group">
            <label for="name">Product Name :</label>
            <InputText id="name" class="form-control" @bind-Value="product.ProductName"></InputText>
        </div>
        <div class="form-group">
            <label for="quantity">Quantity</label>
            <InputNumber id="quantity" class="form-control" @bind-Value="product.Quantity"></InputNumber>
        </div>
        <div class="form-group">
            <label for="price">Price</label>
            <InputNumber id="price" class="form-control" @bind-Value="product.Price"></InputNumber>
        </div>
        <ProductInventoriesComponent ProductInventories="product.ProductInventories"  OnInventorySelected="OnInventorySelected"></ProductInventoriesComponent>
        <button type="submit" class="btn btn-primary mt-3">Save</button>
        <button type="button" class="btn btn-primary mt-3" @onclick="Cancel">cancel</button>
    </EditForm>
}
@code {
    [Parameter]
    public int ProdId { get; set; }
    public Product? product = new Product();

    protected async override Task OnInitializedAsync()
    {
        product = await this.viewProductByIdUseCase.ExecuteAsync(ProdId);

    }
    private void OnInventorySelected(List<ProductInventory> productInventories)
    {
        this.product.ProductInventories = productInventories;
    }
    private async Task OnValidSubmit()
    {
        if(this.product!=null)
            await editProductUseCase.ExecuteAsync(this.product);
        navigationManager.NavigateTo("/Products");
    }
    private void Cancel()
    {
        navigationManager.NavigateTo("/products");
    }

}